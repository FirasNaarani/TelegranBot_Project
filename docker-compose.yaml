version: '3.9'

services:
  mongo_1:
    hostname: ${MONGO_DB1_NAME}
    container_name: ${MONGO_DB1_NAME}
    image: mongo:5
    ports:
      - ${MONGO_DB1_PORT}:${MONGO_PORT}
    networks:
      - mongoCluster
    volumes:
      - mongo_1:/data/db
      - ./DB-setup/script.sh:/script.sh
      - ./DB-setup/${KEY_FILE}:/${KEY_FILE}
    secrets:
      - my_secret
    restart: unless-stopped
    command: ["bash", "-c", "/script.sh"]

  mongo_2:
    hostname: ${MONGO_DB2_NAME}
    container_name: ${MONGO_DB2_NAME}
    image: mongo:5
    ports:
      - ${MONGO_DB2_PORT}:${MONGO_PORT}
    networks:
      - mongoCluster
    volumes:
      - mongo_2:/data/db
      - ./DB-setup/script.sh:/script.sh
      - ./DB-setup/${KEY_FILE}:/${KEY_FILE}
    secrets:
      - my_secret
    restart: unless-stopped
    command: ["bash", "-c", "/script.sh"]

  mongo_3:
    hostname: ${MONGO_DB3_NAME}
    container_name: ${MONGO_DB3_NAME}
    image: mongo:5
    ports:
      - ${MONGO_DB3_PORT}:${MONGO_PORT}
    networks:
      - mongoCluster
    volumes:
      - mongo_3:/data/db
      - ./DB-setup/script.sh:/script.sh
      - ./DB-setup/${KEY_FILE}:/${KEY_FILE}
    secrets:
      - my_secret
    restart: unless-stopped
    command: ["bash", "-c", "/script.sh"]

  init_setup:
    hostname: ${MONGO_SETUP_NAME}
    container_name: ${MONGO_SETUP_NAME}
    image: mongo:5
    ports:
      - ${MONGO_SETUP_PORT}:${MONGO_PORT}
    networks:
      - mongoCluster
    volumes:
      - ./DB-setup/init.sh:/init.sh
      - ./DB-setup/${KEY_FILE}:/${KEY_FILE}
      - ./DB-setup/initiate.js:/initiate.js
      - ./DB-setup/createUser.js:/createUser.js
      - ./DB-setup/reconfig.js:/reconfig.js
    secrets:
      - my_secret
    depends_on:
      - mongo_1
      - mongo_2
      - mongo_3
    command: ["bash", "-c", "/init.sh"]

  mongo-express:
      image: mongo-express
      depends_on:
        - init_setup
      container_name: mongo-express
      ports:
        - 8081:8081
      networks:
        - mongoCluster
      secrets:
      - my_secret
      environment:
        ME_CONFIG_MONGODB_ADMINUSERNAME: ${ADMIN_USER}
        ME_CONFIG_MONGODB_ADMINPASSWORD: ${ADMIN_PASS}
        ME_CONFIG_MONGODB_SERVER: ${MONGO_SERVER}

  yolo5:
      build: ./yolo5
      container_name: yolo5
      ports:
        - "8090:8090"
      environment:
        BUCKET_NAME: fnaarani-bucket
      networks:
        - mongoCluster

networks:
  mongoCluster:
    driver: bridge

volumes:
  .env:
  mongo_1:
  mongo_2:
  mongo_3:
  DB-setup:
secrets:
  my_secret:
    file: ./.env